import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from yahoo_fin import stock_info as si  # Para datos financieros en tiempo real

# Configuraci√≥n general
st.set_page_config(page_title="Planificaci√≥n Financiera", layout="wide")

# T√≠tulo principal
st.title("üí∞ Planificaci√≥n Financiera Inteligente")
st.subheader("Gestiona tus inversiones y metas financieras de manera eficiente")

# Crear pesta√±as
tab1, tab2, tab3 = st.tabs(["üìà Inversiones Diversificadas", "üèñÔ∏è Planificaci√≥n para el Retiro", "üõçÔ∏è Personalizaci√≥n de Gastos"])

# Pesta√±a: Inversiones Diversificadas
with tab1:
    st.header("¬øD√≥nde Invertir Mi Dinero?")
    
    # Entradas del usuario
    monto_inversion = st.number_input("Monto disponible para invertir ($):", min_value=1000.0, value=50000.0, step=1000.0)
    plazo_a√±os = st.slider("Plazo de inversi√≥n (a√±os):", min_value=1, max_value=20, value=10)
    objetivo_casa = st.number_input("Objetivo para la casa ($):", min_value=50000.0, value=1500000.0, step=50000.0)
    
    # Simulaci√≥n de tasas (valores reales de ejemplo)
    tasa_cetes = 10.0  # Supuesta tasa de CETES anual
    tasa_cripto = 50.0  # Riesgo alto
    tasa_fondos = 12.0  # Fondos indexados
    
    st.write("Suposici√≥n de tasas anuales: CETES (10%), Criptomonedas (50%), Fondos Indexados (12%)")
    
    # Distribuci√≥n inicial (personalizable)
    distribucion = {"CETES": 0.5, "Criptomonedas": 0.2, "Fondos Indexados": 0.3}
    
    # Proyecci√≥n
    inversiones = {tipo: monto_inversion * porcentaje for tipo, porcentaje in distribucion.items()}
    proyecciones = {tipo: monto * (1 + tasa / 100) ** plazo_a√±os for tipo, (monto, tasa) in zip(inversiones.keys(), zip(inversiones.values(), [tasa_cetes, tasa_cripto, tasa_fondos]))}
    total_proyectado = sum(proyecciones.values())
    
    st.write(f"**Total proyectado despu√©s de {plazo_a√±os} a√±os**: ${total_proyectado:,.2f}")
    
    # Gr√°fica de barras
    plt.figure(figsize=(10, 5))
    plt.bar(proyecciones.keys(), proyecciones.values(), color=['blue', 'orange', 'green'])
    plt.title("Proyecci√≥n por Tipo de Inversi√≥n")
    plt.xlabel("Tipo de Inversi√≥n")
    plt.ylabel("Monto Final ($)")
    st.pyplot(plt)

# Pesta√±a: Planificaci√≥n para el Retiro
with tab2:
    st.header("Planificaci√≥n para el Retiro")
    # Entradas
    edad_actual = st.number_input("Edad actual:", min_value=18, max_value=100, value=25)
    edad_retiro = st.number_input("Edad de retiro:", min_value=40, max_value=100, value=65)
    gastos_retiro = st.number_input("Gastos mensuales estimados en retiro ($):", min_value=1000.0, value=20000.0, step=1000.0)
    ahorro_actual_retiro = st.number_input("Ahorros actuales para el retiro ($):", min_value=0.0, value=50000.0, step=5000.0)
    
    # C√°lculos
    a√±os_retiro = edad_retiro - edad_actual
    capital_retiro = gastos_retiro * 12 * 20  # Supone 20 a√±os de retiro
    ahorro_mensual_necesario = (capital_retiro - ahorro_actual_retiro) / (a√±os_retiro * 12)
    
    st.write(f"**Capital necesario para el retiro:** ${capital_retiro:,.2f}")
    st.write(f"**Ahorro mensual necesario:** ${ahorro_mensual_necesario:,.2f}")

# Pesta√±a: Personalizaci√≥n de Gastos
with tab3:
    st.header("Personalizaci√≥n de Gastos")
    st.write("Registra y ajusta tus gastos mensuales.")
    categorias = ["Alimentos", "Renta", "Transporte", "Entretenimiento", "Otros"]
    gastos = {categoria: st.number_input(f"Gastos en {categoria} ($):", min_value=0.0, value=1000.0) for categoria in categorias}
    total_gastos = sum(gastos.values())
    
    st.write(f"**Total de gastos mensuales registrados:** ${total_gastos:,.2f}")
    
    # Gr√°fica circular
    plt.figure(figsize=(7, 7))
    plt.pie(gastos.values(), labels=gastos.keys(), autopct="%1.1f%%", startangle=90)
    plt.title("Distribuci√≥n de Gastos")
    st.pyplot(plt)

